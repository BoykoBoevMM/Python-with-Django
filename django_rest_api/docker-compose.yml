services: 
  django:
    container_name: django_container
    build:
      context: ../
      dockerfile: django_rest_api/Dockerfile
    command: sh -c "python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    volumes:
      - .:/app
    ports:
      - 8000:8000
    environment:
      SECRET_KEY: ${SECRET_KEY}
      DEBUG: ${DEBUG}
      DJANGO_ALLOWED_HOSTS: ${DJANGO_ALLOWED_HOSTS}
      DJANGO_SETTINGS_MODULE: ${DJANGO_SETTINGS_MODULE}
      DATABASE_NAME: ${DATABASE_NAME}
      DATABASE_USER: ${DATABASE_USER}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      DATABASE_PORT: ${DATABASE_PORT}
      DATABASE_HOST: ${DATABASE_HOST}
      EMAIL_PORT: ${EMAIL_PORT}
      EMAIL_USE_TLS: ${EMAIL_USE_TLS}
      EMAIL_USE_SSL: ${EMAIL_USE_SSL}
      EMAIL_HOST_USER: ${EMAIL_HOST_USER}
      DEFAULT_FROM_EMAIL: ${DEFAULT_FROM_EMAIL}
      EMAIL_HOST_PASSWORD: ${EMAIL_HOST_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    stdin_open: true
    tty: true
    depends_on:
      database:
        condition: service_healthy
      redis:
        condition: service_healthy

  database:
    container_name: database_container
    image: postgres:15
    volumes:
      - data:/var/lib/postgresql
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      DATABASE_PORT: ${DATABASE_PORT}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s
    ports:
      - 5432:5432

  celery:
    container_name: celery_container
    build:
      context: ../
      dockerfile: django_rest_api/Dockerfile
    command: celery --app=django_server worker -l INFO
    user: "1000:1000"
    volumes:
      - .:/app
    depends_on:
      - redis

  redis:
    container_name: redis_container
    image: redis:alpine
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 1s
      timeout: 3s
      retries: 30
    ports:
      - "6379:6379"

  # pytest:
  #   container_name: pytest_container
  #   build:
  #     context: ../
  #     dockerfile: django_rest_api/Dockerfile
  #   command: pytest --html=/reports/test-results.html
  #   volumes:
  #     - .:/app
  #     - ./reports:/reports
  #   env_file:
  #     - .env.test

volumes:
  data: